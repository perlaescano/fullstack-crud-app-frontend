{"ast":null,"code":"import _asyncToGenerator from \"/Users/ericdittus/Desktop/fullstack-crud-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/ericdittus/Desktop/fullstack-crud-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/ericdittus/Desktop/fullstack-crud-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ericdittus/Desktop/fullstack-crud-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/ericdittus/Desktop/fullstack-crud-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/ericdittus/Desktop/fullstack-crud-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ericdittus/Desktop/fullstack-crud-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ericdittus/Desktop/fullstack-crud-app-frontend/src/components/containers/NewInstructorContainer.js\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { addInstructorThunk } from '../../store/thunks';\nimport { NewInstructorView } from \"../views\";\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\n\nvar NewInstructorContainer = /*#__PURE__*/function (_Component) {\n  _inherits(NewInstructorContainer, _Component);\n\n  var _super = _createSuper(NewInstructorContainer);\n\n  function NewInstructorContainer(props) {\n    var _this;\n\n    _classCallCheck(this, NewInstructorContainer);\n\n    _this = _super.call(this, props);\n\n    _this.handleChange = function (event) {\n      return _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(event) {\n        var instructor, oldRedirectId, _yield$_this$props$ad, redirectId;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                instructor = {\n                  firstname: _this.state.firstname,\n                  lastname: _this.state.lastname,\n                  department: _this.state.department,\n                  imageurl: _this.state.imageurl,\n                  redirectId: null\n                };\n                oldRedirectId = _this.state.redirectId;\n                _context.next = 5;\n                return _this.props.addInstructor(instructor);\n\n              case 5:\n                _yield$_this$props$ad = _context.sent;\n                redirectId = _yield$_this$props$ad.id;\n\n                _this.setState({\n                  redirectId: redirectId\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      department: \"\",\n      imageurl: \"\",\n      redirect: false,\n      redirectId: null\n    };\n    return _this;\n  }\n\n  _createClass(NewInstructorContainer, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.setState({\n        redirectId: null\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.redirectId !== null) {\n        return /*#__PURE__*/React.createElement(\"useNavigate\", {\n          to: \"/instructor/\".concat(this.state.redirectId),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(NewInstructorView, {\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      });\n    }\n  }]);\n\n  return NewInstructorContainer;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addInstructor: function addInstructor(instructor) {\n      return dispatch(addInstructorThunk(instructor));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(NewInstructorContainer);","map":{"version":3,"names":["Component","connect","useNavigate","addInstructorThunk","NewInstructorView","React","Redirect","NewInstructorContainer","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","instructor","firstname","state","lastname","department","imageurl","redirectId","oldRedirectId","addInstructor","id","redirect","mapDispatchToProps","dispatch"],"sources":["/Users/ericdittus/Desktop/fullstack-crud-app-frontend/src/components/containers/NewInstructorContainer.js"],"sourcesContent":["import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { addInstructorThunk } from '../../store/thunks';\nimport {NewInstructorView} from \"../views\";\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\n\n\nclass NewInstructorContainer extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          firstname:\"\",\n          lastname:\"\",\n          department:\"\",\n          imageurl:\"\",\n          redirect: false,\n          redirectId: null\n        };\n    }\n\n    handleChange = (event) => this.setState({\n        [event.target.name]: event.target.value\n      });\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        let instructor = {\n          firstname: this.state.firstname,\n          lastname:this.state.lastname,\n          department:this.state.department,\n          imageurl:this.state.imageurl,\n          redirectId:null\n\n        };\n        const { redirectId: oldRedirectId } = this.state;\n\n        const { id: redirectId } = await this.props.addInstructor(instructor);\n        this.setState({ redirectId });\n\n\n    }\n\n    componentWillUnmount() {\n       this.setState({  redirectId: null });\n    }\n\n    render() {\n      if (this.state.redirectId !== null) {\n        return (<useNavigate to={`/instructor/${this.state.redirectId}`}/>)\n        }\n        return (\n          <NewInstructorView\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n         />\n        );\n    }\n  }\n\n  const mapDispatchToProps = (dispatch) => {\n    return ({\n        addInstructor: (instructor) => dispatch(addInstructorThunk(instructor)),\n      })\n  }\n\n  export default connect(null, mapDispatchToProps)(NewInstructorContainer);\n"],"mappings":";;;;;;;;;+CACA,oJ;;;;;;AADA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,SAAQC,iBAAR,QAAgC,UAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;IAGMC,sB;;;;;EACF,gCAAYC,KAAZ,EAAkB;IAAA;;IAAA;;IACd,0BAAMA,KAAN;;IADc,MAYlBC,YAZkB,GAYH,UAACC,KAAD;MAAA,OAAW,MAAKC,QAAL,qBACrBD,KAAK,CAACE,MAAN,CAAaC,IADQ,EACDH,KAAK,CAACE,MAAN,CAAaE,KADZ,EAAX;IAAA,CAZG;;IAAA,MAgBlBC,YAhBkB;MAAA,sEAgBH,iBAAML,KAAN;QAAA;;QAAA;UAAA;YAAA;cAAA;gBACXA,KAAK,CAACM,cAAN;gBACIC,UAFO,GAEM;kBACfC,SAAS,EAAE,MAAKC,KAAL,CAAWD,SADP;kBAEfE,QAAQ,EAAC,MAAKD,KAAL,CAAWC,QAFL;kBAGfC,UAAU,EAAC,MAAKF,KAAL,CAAWE,UAHP;kBAIfC,QAAQ,EAAC,MAAKH,KAAL,CAAWG,QAJL;kBAKfC,UAAU,EAAC;gBALI,CAFN;gBAUSC,aAVT,GAU2B,MAAKL,KAVhC,CAUHI,UAVG;gBAAA;gBAAA,OAYsB,MAAKf,KAAL,CAAWiB,aAAX,CAAyBR,UAAzB,CAZtB;;cAAA;gBAAA;gBAYCM,UAZD,yBAYHG,EAZG;;gBAaX,MAAKf,QAAL,CAAc;kBAAEY,UAAU,EAAVA;gBAAF,CAAd;;cAbW;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAhBG;;MAAA;QAAA;MAAA;IAAA;;IAEd,MAAKJ,KAAL,GAAa;MACXD,SAAS,EAAC,EADC;MAEXE,QAAQ,EAAC,EAFE;MAGXC,UAAU,EAAC,EAHA;MAIXC,QAAQ,EAAC,EAJE;MAKXK,QAAQ,EAAE,KALC;MAMXJ,UAAU,EAAE;IAND,CAAb;IAFc;EAUjB;;;;WAwBD,gCAAuB;MACpB,KAAKZ,QAAL,CAAc;QAAGY,UAAU,EAAE;MAAf,CAAd;IACF;;;WAED,kBAAS;MACP,IAAI,KAAKJ,KAAL,CAAWI,UAAX,KAA0B,IAA9B,EAAoC;QAClC,oBAAQ;UAAa,EAAE,wBAAiB,KAAKJ,KAAL,CAAWI,UAA5B,CAAf;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAAR;MACC;;MACD,oBACE,oBAAC,iBAAD;QACA,YAAY,EAAE,KAAKd,YADnB;QAEA,YAAY,EAAE,KAAKM,YAFnB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF;IAMH;;;;EAjDgCf,S;;AAoDnC,IAAM4B,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;EACvC,OAAQ;IACJJ,aAAa,EAAE,uBAACR,UAAD;MAAA,OAAgBY,QAAQ,CAAC1B,kBAAkB,CAACc,UAAD,CAAnB,CAAxB;IAAA;EADX,CAAR;AAGD,CAJD;;AAMA,eAAehB,OAAO,CAAC,IAAD,EAAO2B,kBAAP,CAAP,CAAkCrB,sBAAlC,CAAf"},"metadata":{},"sourceType":"module"}