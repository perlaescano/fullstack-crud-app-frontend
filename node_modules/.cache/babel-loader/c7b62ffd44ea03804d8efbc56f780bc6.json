{"ast":null,"code":"import _asyncToGenerator from \"/Users/ericdittus/Desktop/fullstack-crud-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/ericdittus/Desktop/fullstack-crud-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/ericdittus/Desktop/fullstack-crud-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/ericdittus/Desktop/fullstack-crud-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ericdittus/Desktop/fullstack-crud-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ericdittus/Desktop/fullstack-crud-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ericdittus/Desktop/fullstack-crud-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ericdittus/Desktop/fullstack-crud-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ericdittus/Desktop/fullstack-crud-app-frontend/src/components/containers/CourseContainer.js\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\"; //import { fetchCourseThunk } from \"../../store/thunks\";\n\nimport { editCourseThunk, fetchCourseThunk } from \"../../store/thunks\";\nimport { CourseView } from \"../views\";\n\nvar CourseContainer = /*#__PURE__*/function (_Component) {\n  _inherits(CourseContainer, _Component);\n\n  function CourseContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CourseContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CourseContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleChange = function (event) {\n      return _this.setState(function (prevState) {\n        return {\n          editedCourse: _objectSpread({}, prevState.editedCourse, _defineProperty({}, event.target.name, event.target.value))\n        };\n      });\n    };\n\n    _this.cancelFrom = function (event) {\n      return _this.setState({\n        editedCourse: {},\n        cancelForm: null,\n        handleChange: null\n      });\n    };\n\n    _this.handleSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(event) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n\n                if (!_this.state.handleChange) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 4;\n                return _this.props.editCourse(_objectSpread({}, _this.state.editedCourse, {\n                  id: _this.props.course.id\n                }));\n\n              case 4:\n                _this.cancelFrom(event);\n\n                _context.next = 8;\n                break;\n\n              case 7:\n                // its the edit button\n                _this.setState({\n                  editedCourse: {},\n                  cancelForm: _this.cancelFrom,\n                  handleChange: _this.handleChange // set handleChange to actually do things\n\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(CourseContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchCourse(this.props.match.params.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(CourseView, {\n        student: this.props.course,\n        cancelForm: this.state.cancelForm,\n        handleChange: this.state.handleChange,\n        handleSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      });\n    }\n  }]);\n\n  return CourseContainer;\n}(Component); // map state to props\n\n\nvar mapState = function mapState(state) {\n  return {\n    course: state.course\n  };\n}; // map dispatch to props\n\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    fetchCourse: function fetchCourse(id) {\n      return dispatch(fetchCourseThunk(id));\n    },\n    editCourse: function editCourse(course) {\n      return dispatch(editCourseThunk(course));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(CourseContainer);","map":{"version":3,"names":["React","Component","connect","editCourseThunk","fetchCourseThunk","CourseView","CourseContainer","handleChange","event","setState","prevState","editedCourse","target","name","value","cancelFrom","cancelForm","handleSubmit","preventDefault","state","props","editCourse","id","course","fetchCourse","match","params","mapState","mapDispatch","dispatch"],"sources":["/Users/ericdittus/Desktop/fullstack-crud-app-frontend/src/components/containers/CourseContainer.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n//import { fetchCourseThunk } from \"../../store/thunks\";\nimport { editCourseThunk, fetchCourseThunk } from \"../../store/thunks\";\nimport { CourseView } from \"../views\";\n\nclass CourseContainer extends Component {\n\n  handleChange = event => this.setState(prevState => ({\n    editedCourse: {\n        ...prevState.editedCourse,\n        [event.target.name]: event.target.value\n    }\n}));\n\n\ncancelFrom = event => this.setState({\n    editedCourse: {},\n    cancelForm: null,\n    handleChange: null\n});\n\nhandleSubmit = async event => {\n    event.preventDefault();\n    if (this.state.handleChange) { // submit button\n        // do the submission\n        await this.props.editCourse({\n            ...this.state.editedCourse,\n            id: this.props.course.id\n        });\n        this.cancelFrom(event);\n    } else { // its the edit button\n        this.setState({\n            editedCourse: {},\n            cancelForm: this.cancelFrom,\n            handleChange: this.handleChange // set handleChange to actually do things\n        });\n\n\n    }\n}\n\ncomponentDidMount() {\n    this.props.fetchCourse(this.props.match.params.id);\n}\n\nrender() {\n    return (\n        <CourseView\n            student={this.props.course}\n            cancelForm={this.state.cancelForm}\n            handleChange={this.state.handleChange}\n            handleSubmit={this.handleSubmit}\n        />\n    );\n}\n}\n// map state to props\nconst mapState = state => {\n  return {\n    course: state.course,\n  };\n};\n\n// map dispatch to props\nconst mapDispatch = (dispatch) => {\n  return {\n    fetchCourse: (id) => dispatch(fetchCourseThunk(id)),\n    editCourse: course => dispatch(editCourseThunk(course))\n  };\n};\n\nexport default connect(mapState, mapDispatch)(CourseContainer);\n"],"mappings":";;;;;;;;;;+CACA,oJ;;AADA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,SAASC,eAAT,EAA0BC,gBAA1B,QAAkD,oBAAlD;AACA,SAASC,UAAT,QAA2B,UAA3B;;IAEMC,e;;;;;;;;;;;;;;;;UAEJC,Y,GAAe,UAAAC,KAAK;MAAA,OAAI,MAAKC,QAAL,CAAc,UAAAC,SAAS;QAAA,OAAK;UAClDC,YAAY,oBACLD,SAAS,CAACC,YADL,sBAEPH,KAAK,CAACI,MAAN,CAAaC,IAFN,EAEaL,KAAK,CAACI,MAAN,CAAaE,KAF1B;QADsC,CAAL;MAAA,CAAvB,CAAJ;IAAA,C;;UAQtBC,U,GAAa,UAAAP,KAAK;MAAA,OAAI,MAAKC,QAAL,CAAc;QAChCE,YAAY,EAAE,EADkB;QAEhCK,UAAU,EAAE,IAFoB;QAGhCT,YAAY,EAAE;MAHkB,CAAd,CAAJ;IAAA,C;;UAMlBU,Y;4EAAe,iBAAMT,KAAN;QAAA;UAAA;YAAA;cAAA;gBACXA,KAAK,CAACU,cAAN;;gBADW,KAEP,MAAKC,KAAL,CAAWZ,YAFJ;kBAAA;kBAAA;gBAAA;;gBAAA;gBAAA,OAID,MAAKa,KAAL,CAAWC,UAAX,mBACC,MAAKF,KAAL,CAAWR,YADZ;kBAEFW,EAAE,EAAE,MAAKF,KAAL,CAAWG,MAAX,CAAkBD;gBAFpB,GAJC;;cAAA;gBAQP,MAAKP,UAAL,CAAgBP,KAAhB;;gBARO;gBAAA;;cAAA;gBASF;gBACL,MAAKC,QAAL,CAAc;kBACVE,YAAY,EAAE,EADJ;kBAEVK,UAAU,EAAE,MAAKD,UAFP;kBAGVR,YAAY,EAAE,MAAKA,YAHT,CAGsB;;gBAHtB,CAAd;;cAVO;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;;wCAoBK;MAChB,KAAKa,KAAL,CAAWI,WAAX,CAAuB,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBJ,EAA/C;IACH;;;6BAEQ;MACL,oBACI,oBAAC,UAAD;QACI,OAAO,EAAE,KAAKF,KAAL,CAAWG,MADxB;QAEI,UAAU,EAAE,KAAKJ,KAAL,CAAWH,UAF3B;QAGI,YAAY,EAAE,KAAKG,KAAL,CAAWZ,YAH7B;QAII,YAAY,EAAE,KAAKU,YAJvB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADJ;IAQH;;;;EAjD6BhB,S,GAmD9B;;;AACA,IAAM0B,QAAQ,GAAG,SAAXA,QAAW,CAAAR,KAAK,EAAI;EACxB,OAAO;IACLI,MAAM,EAAEJ,KAAK,CAACI;EADT,CAAP;AAGD,CAJD,C,CAMA;;;AACA,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAc;EAChC,OAAO;IACLL,WAAW,EAAE,qBAACF,EAAD;MAAA,OAAQO,QAAQ,CAACzB,gBAAgB,CAACkB,EAAD,CAAjB,CAAhB;IAAA,CADR;IAELD,UAAU,EAAE,oBAAAE,MAAM;MAAA,OAAIM,QAAQ,CAAC1B,eAAe,CAACoB,MAAD,CAAhB,CAAZ;IAAA;EAFb,CAAP;AAID,CALD;;AAOA,eAAerB,OAAO,CAACyB,QAAD,EAAWC,WAAX,CAAP,CAA+BtB,eAA/B,CAAf"},"metadata":{},"sourceType":"module"}