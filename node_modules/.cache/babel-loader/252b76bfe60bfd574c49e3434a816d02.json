{"ast":null,"code":"var _jsxFileName = \"/Users/perlaescano/Downloads/spring-2022/CSCI-39548-web/fullstack-crud-app-frontend/src/components/containers/InstructorContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchInstructorThunk } from \"../../store/thunks\";\nimport { InstructorView } from \"../views\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InstructorContainer extends Component {\n  componentDidMount() {\n    //getting instructor ID from url\n    this.props.fetchInstructor(this.props.match.params.id);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(InstructorView, {\n      instructor: this.props.instructor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n} // map state to props\n\n\nconst mapState = state => {\n  return {\n    instructor: state.instructor\n  };\n}; // map dispatch to props\n\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchInstructor: id => dispatch(fetchInstructorThunk(id))\n  };\n};\n\nexport default connect(mapState, mapDispatch)(InstructorContainer);","map":{"version":3,"names":["React","Component","connect","fetchInstructorThunk","InstructorView","InstructorContainer","componentDidMount","props","fetchInstructor","match","params","id","render","instructor","mapState","state","mapDispatch","dispatch"],"sources":["/Users/perlaescano/Downloads/spring-2022/CSCI-39548-web/fullstack-crud-app-frontend/src/components/containers/InstructorContainer.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchInstructorThunk } from \"../../store/thunks\";\n\nimport { InstructorView } from \"../views\";\n\nclass InstructorContainer extends Component {\n  componentDidMount() {\n    //getting instructor ID from url\n    this.props.fetchInstructor(this.props.match.params.id);\n  }\n\n  render() {\n    return (\n      <InstructorView \n        instructor={this.props.instructor}\n      />\n    );\n  }\n}\n\n// map state to props\nconst mapState = (state) => {\n  return {\n    instructor: state.instructor,\n  };\n};\n\n// map dispatch to props\nconst mapDispatch = (dispatch) => {\n  return {\n    fetchInstructor: (id) => dispatch(fetchInstructorThunk(id)),\n  };\n};\n\nexport default connect(mapState, mapDispatch)(InstructorContainer);"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,QAAqC,oBAArC;AAEA,SAASC,cAAT,QAA+B,UAA/B;;;AAEA,MAAMC,mBAAN,SAAkCJ,SAAlC,CAA4C;EAC1CK,iBAAiB,GAAG;IAClB;IACA,KAAKC,KAAL,CAAWC,eAAX,CAA2B,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,EAAnD;EACD;;EAEDC,MAAM,GAAG;IACP,oBACE,QAAC,cAAD;MACE,UAAU,EAAE,KAAKL,KAAL,CAAWM;IADzB;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;AAZyC,C,CAe5C;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAC1B,OAAO;IACLF,UAAU,EAAEE,KAAK,CAACF;EADb,CAAP;AAGD,CAJD,C,CAMA;;;AACA,MAAMG,WAAW,GAAIC,QAAD,IAAc;EAChC,OAAO;IACLT,eAAe,EAAGG,EAAD,IAAQM,QAAQ,CAACd,oBAAoB,CAACQ,EAAD,CAArB;EAD5B,CAAP;AAGD,CAJD;;AAMA,eAAeT,OAAO,CAACY,QAAD,EAAWE,WAAX,CAAP,CAA+BX,mBAA/B,CAAf"},"metadata":{},"sourceType":"module"}